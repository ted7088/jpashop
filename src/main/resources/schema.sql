DROP TABLE IF EXISTS category_item;
DROP TABLE IF EXISTS category;
DROP TABLE IF EXISTS order_item;
DROP TABLE IF EXISTS orders;
DROP TABLE IF EXISTS delivery;
DROP TABLE IF EXISTS member;
DROP TABLE IF EXISTS item;

CREATE TABLE member (
    member_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    city VARCHAR(255),
    street VARCHAR(255),
    zipcode VARCHAR(255)
);

CREATE TABLE delivery (
    delivery_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    city VARCHAR(255),
    street VARCHAR(255),
    zipcode VARCHAR(255),
    status VARCHAR(255)
);

CREATE TABLE item (
    item_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    dtype VARCHAR(31) NOT NULL,
    name VARCHAR(255) NOT NULL,
    price INT NOT NULL,
    stock_quantity INT NOT NULL,
    artist VARCHAR(255),
    etc VARCHAR(255),
    author VARCHAR(255),
    isbn VARCHAR(255),
    director VARCHAR(255),
    actor VARCHAR(255)
);

CREATE TABLE orders (
    order_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    member_id BIGINT,
    delivery_id BIGINT,
    order_date TIMESTAMP,
    status VARCHAR(255),
    FOREIGN KEY (member_id) REFERENCES member(member_id),
    FOREIGN KEY (delivery_id) REFERENCES delivery(delivery_id)
);

CREATE TABLE order_item (
    order_item_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_id BIGINT,
    item_id BIGINT,
    order_price INT,
    count INT,
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (item_id) REFERENCES item(item_id)
);

CREATE TABLE category (
    category_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255),
    parent_id BIGINT,
    FOREIGN KEY (parent_id) REFERENCES category(category_id)
);

CREATE TABLE category_item (
    category_id BIGINT,
    item_id BIGINT,
    PRIMARY KEY (category_id, item_id),
    FOREIGN KEY (category_id) REFERENCES category(category_id),
    FOREIGN KEY (item_id) REFERENCES item(item_id)
); 